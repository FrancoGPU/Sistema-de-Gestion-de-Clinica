spring.application.name=MediCore

# Puerto del servidor
server.port=8080

# Configuración de base de datos H2 (en memoria para desarrollo)

# Datasource: permite sobreescribir con variables de entorno para usar MySQL en Docker.
# Por defecto mantiene H2 en memoria para desarrollo rápido.
spring.datasource.url=${SPRING_DATASOURCE_URL:jdbc:h2:mem:medicore}
# Nombre de la clase del driver. Para MySQL: com.mysql.cj.jdbc.Driver
spring.datasource.driver-class-name=${SPRING_DATASOURCE_DRIVER:org.h2.Driver}
spring.datasource.username=${SPRING_DATASOURCE_USERNAME:sa}
spring.datasource.password=${SPRING_DATASOURCE_PASSWORD:}

# Configuración de JPA/Hibernate (dialect configurable via env)
spring.jpa.database-platform=${SPRING_JPA_DATABASE_PLATFORM:org.hibernate.dialect.H2Dialect}
spring.jpa.hibernate.ddl-auto=${SPRING_JPA_HBM2DDL:auto}
spring.jpa.show-sql=${SPRING_JPA_SHOW_SQL:true}
spring.jpa.properties.hibernate.format_sql=${SPRING_JPA_FORMAT_SQL:true}

# Consola H2 (accesible en http://localhost:8080/h2-console)
spring.h2.console.enabled=true
spring.h2.console.path=/h2-console

# Logging de SQL
logging.level.org.hibernate.SQL=DEBUG
logging.level.org.hibernate.type.descriptor.sql.BasicBinder=TRACE
